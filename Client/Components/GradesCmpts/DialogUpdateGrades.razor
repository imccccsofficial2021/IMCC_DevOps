
@using System.Text.RegularExpressions
@using MudBlazorWASM.Client.Components.GradesCmpts
@using MudBlazorWASM.Client.Repository.Grades
@using MudBlazorWASM.Shared.Models
@inject IDialogService DialogService;
@inject HttpClient httpClient;

<MudDialog>
    <DialogContent>
                <MudTextField Label="Prelim" @bind-Value="paramGrades.Prelim" />
                <MudTextField Label="Midterm" @bind-Value="paramGrades.Midterm" />
                <MudTextField Label="Semi" @bind-Value="paramGrades.Prefinal" />
                <MudTextField Label="Final" @bind-Value="paramGrades.Final" />
                <MudTextField Label="Final" @bind-Value="paramGrades.Average" />
                <MudTextField Label="Final" @bind-Value="paramGrades.Retake" />
        </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary"></MudButton>        
        <MudButton Color="Color.Warning" OnClick="Confirm">Cancel</MudButton>

    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public SubmittedGrade paramGrades { get; set; } = new SubmittedGrade();

    public string? PrelimG { get; set; }
    public string? MidG { get; set; }
    public string? SemiG { get; set; }
    public string? FinalG { get; set; }



    bool validGrades = true;
    string[] errors = { };
    MudForm form;

    protected override async Task OnInitializedAsync()
    {
        PrelimG = "";
        MidG = "";
        SemiG = "";
        FinalG = "";
    }

    private async void Cancel()
    {
        MudDialog.Cancel();
    }

    private async void Confirm()
    {


        MudDialog.Close(DialogResult.Ok<SubmittedGrade>(paramGrades));

    }
}
