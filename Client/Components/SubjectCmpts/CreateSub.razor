@page "/addsubject1"
@inject ISubjectService SubjectService

@if (Id == null)
{
    <PageTitle>Add New Subject</PageTitle>
   <h3>CreateSub</h3>
}
else
{
     <PageTitle>Edit @stud.COURSEDESC</PageTitle>
    <h3>Edit @stud.COURSEDESC</h3>
}

<EditForm Model="stud" OnSubmit="HandleSubmit">

    <div>
        <label for="ID">ID</label>
        <InputNumber name="ID" @bind-Value="stud.ID" class="form-control"></InputNumber>
    </div>
    <div>
        <label for="COURSENO"> Course No#</label>
        <InputNumber id="COURSENO" @bind-Value="stud.COURSENO" class="form-control"></InputNumber>
    </div>
    <div>
        <label for="COURSEDESC"> Course Description</label>
        <InputText id="COURSEDESC" @bind-Value="stud.COURSEDESC" class="form-control"></InputText>
    </div>
    <div>
        <label for="CREDITS"> Credits</label>
        <InputNumber name="CREDITS" @bind-Value="stud.CREDITS" class="form-control"></InputNumber>
    </div>
    <div>
        <label for="Enrollments"> Enrollments</label>
        <InputText name="Enrollments" @bind-Value="stud.Enrollments" class="form-control"></InputText>
    </div>
    <br />
    <button type="Submit" class="btn btn-primary">@btnText</button>
    <button type="Submit" class="btn btn-danger" @onclick="DeleteSubject">Delete Subject</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    SubjectList stud = new SubjectList {};

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Subject" : "Update Subject";

    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            //Add a New Student
            stud.COURSENO = stud.COURSENO;
        }
        else
        {
            stud = await SubjectService.GetCourseNo((int) Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await SubjectService.CreateNewSubjects(stud);
        }
        else
        {
            await SubjectService.UpdateAllSubjects(stud);
        }

    }
    async Task DeleteSubject()
    {
        await SubjectService.DeleteSubject(stud.COURSENO);
    }
}