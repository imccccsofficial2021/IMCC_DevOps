// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using MudBlazorWASM.Server;
using MudBlazorWASM.Shared.Models;

namespace MudBlazorWASM.Server.Data
{
    public partial class SchooldbContext : DbContext
    {
        public SchooldbContext()
        {
        }

        public SchooldbContext(DbContextOptions<SchooldbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Enrollment> Enrollments { get; set; }
        public virtual DbSet<GradeSummary> GradeSummaries { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<LoginResult> LoginResults { get; set; }
        public virtual DbSet<LoginUser> LoginUsers { get; set; }
        public virtual DbSet<RegisterResult> RegisterResults { get; set; }
        public virtual DbSet<RegisterUser> RegisterUsers { get; set; }
        public virtual DbSet<RoomAssignment> RoomAssignment { get; set; }
        public virtual DbSet<Student> Students { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Course>(entity =>
            {
                entity.HasIndex(e => e.DepartmentId, "IX_Courses_DepartmentID");

                entity.HasIndex(e => e.InstructorId, "IX_Courses_InstructorID");

                entity.Property(e => e.CourseId).HasColumnName("CourseID");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.InstructorId).HasColumnName("InstructorID");

                entity.HasOne(d => d.Department)
                    .WithMany(p => p.Courses)
                    .HasForeignKey(d => d.DepartmentId);

                entity.HasOne(d => d.Instructor)
                    .WithMany(p => p.Courses)
                    .HasForeignKey(d => d.InstructorId);
            });

            modelBuilder.Entity<Department>(entity =>
            {
                entity.Property(e => e.Budget).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");

                entity.Property(e => e.InstructorId).HasColumnName("InstructorID");
            });

            modelBuilder.Entity<Enrollment>(entity =>
            {
                entity.HasKey(e => e.CountId);

                entity.HasIndex(e => e.CourseId, "IX_Enrollments_CourseID");

                entity.HasIndex(e => e.StudentId, "IX_Enrollments_StudentID");

                entity.Property(e => e.CourseId).HasColumnName("CourseID");

                entity.Property(e => e.EnrollmentId).HasColumnName("EnrollmentID");

                entity.Property(e => e.StudentId).HasColumnName("StudentID");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.Enrollments)
                    .HasForeignKey(d => d.CourseId);

                entity.HasOne(d => d.Student)
                    .WithMany(p => p.Enrollments)
                    .HasForeignKey(d => d.StudentId);
            });

            modelBuilder.Entity<GradeSummary>(entity =>
            {
                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.Average).HasColumnName("AVERAGE");

                entity.Property(e => e.Courseno)
                    .HasMaxLength(50)
                    .HasColumnName("COURSENO");

                entity.Property(e => e.Deptno)
                    .HasMaxLength(50)
                    .HasColumnName("DEPTNO");

                entity.Property(e => e.Final).HasColumnName("FINAL");

                entity.Property(e => e.Firstname)
                    .HasMaxLength(50)
                    .HasColumnName("FIRSTNAME");

                entity.Property(e => e.Lastname)
                    .HasMaxLength(50)
                    .HasColumnName("LASTNAME");

                entity.Property(e => e.Mi)
                    .HasMaxLength(50)
                    .HasColumnName("MI");

                entity.Property(e => e.Mid).HasColumnName("MID");

                entity.Property(e => e.Offerno)
                    .HasMaxLength(50)
                    .HasColumnName("OFFERNO");

                entity.Property(e => e.Pre).HasColumnName("PRE");

                entity.Property(e => e.Semi).HasColumnName("SEMI");

                entity.Property(e => e.Studno)
                    .HasMaxLength(50)
                    .HasColumnName("STUDNO");

                entity.Property(e => e.Subjectdesc)
                    .HasMaxLength(100)
                    .HasColumnName("SUBJECTDESC");
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<LoginResult>(entity =>
            {
                entity.HasKey(e => e.ItemNo);
            });

            modelBuilder.Entity<LoginUser>(entity =>
            {
                entity.HasKey(e => e.ItemNo);
            });

            modelBuilder.Entity<RegisterResult>(entity =>
            {
                entity.HasKey(e => e.ItemNo);
            });

            modelBuilder.Entity<RegisterUser>(entity =>
            {
                entity.HasKey(e => e.ItemNo);
            });

            modelBuilder.Entity<RoomAssignment>(entity =>
            {
                entity.HasIndex(e => e.InstructorId, "IX_RoomAssignment_InstructorID")
                    .IsUnique();

                entity.Property(e => e.InstructorId).HasColumnName("InstructorID");

                entity.Property(e => e.Location).HasMaxLength(50);

                entity.HasOne(d => d.Instructor)
                    .WithOne(p => p.RoomAssignment)
                    .HasForeignKey<RoomAssignment>(d => d.InstructorId);
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.Property(e => e.StudId).HasColumnName("StudID");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}